{"version":3,"sources":["components/ui-component/nav-bar/style.module.css","components/ui-component/user/style.module.css","store/actions/index.ts","store/reducers/mainReducers.tsx","store/index.tsx","store/services/register.service.ts","store/async-actions/registerUser.ts","components/containers/pages/register/index.tsx","store/services/changePassword.service.ts","store/async-actions/changePassword.ts","components/containers/pages/changePassword/index.tsx","store/services/accounts.service.ts","store/async-actions/getAccounts.ts","store/services/users.service.ts","store/async-actions/getUsers.ts","components/ui-component/user/index.tsx","components/ui-component/account/index.tsx","components/containers/pages/accounts-page/index.tsx","components/ui-component/nav-bar/index.tsx","components/containers/pages/account-page/index.tsx","components/containers/pages/login/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","ACTIONS","REGISTER","USER_REGISTRATION_PENDING","USER_REGISTRATION_SUCCESS","USER_REGISTRATION_FAILED","ACCOUNTS","GET_ACCOUNTS_SUCCESS","GET_ACCOUNT_SUCCESS","GET_ACCOUNT_ERROR","GET_ACCOUNTS_ERROR","USERS","GET_USERS_SUCCESS","GET_USERS_ERROR","initialState","accounts","users","userName","account","mainReducer","state","action","type","alert","payload","store","createStore","BASE_URL","API_URL","registerService","userDetails","a","axios","post","data","message","dispatch","result","console","log","Register","user","email","firstName","lastName","phone","undefined","bankBranch","id","address","password","useState","setUserDetails","isValid","emailValidation","setEmailValidation","onChangeUserDetails","key","value","Form","Row","Group","as","Col","controlId","Label","Control","name","onChange","event","target","includes","placeholder","Button","variant","onClick","registerUser","changePasswordService","changePasswordDetails","ChangePassword","newPassword","confirmNewPassword","setChangePasswordDetails","onChangePassword","style","width","changePasswordAction","getAccountsService","userId","queryUserId","get","headers","authorization","localStorage","getItem","modeldedAccounts","createAccounts","Array","isArray","accountObjReduce","reduce","accountsObj","currentAccountUser","accountId","createdAt","newAccount","Object","values","getAccountByIdService","getAccountsAction","getUsersService","UserCard","props","className","css","userCard","AccountCard","to","moment","format","map","AccountsPage","useSelector","useEffect","getUsersAction","UsersFilter","v","e","custom","item","routes","title","NavBarApp","Nav","mainNavBar","NavItmesList","links","link","Item","customLink","AccountPage","params","useParams","currentAccount","getAccountById","Number","AccountDetails","AccountActions","operation","fields","fn","helpers","extractCreatedAt","extractBalance","balance","header","amount","setAmount","Badge","min","max","Login","loginDetails","setItem","token","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb2516b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"customLink\":\"style_customLink__1QHTX\",\"mainNavBar\":\"style_mainNavBar__3LTup\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userCard\":\"style_userCard__20kzk\"};","const ACTIONS = {\n\n    REGISTER: {\n        USER_REGISTRATION_PENDING: \"USER_REGISTRATION_PENDING\",\n        USER_REGISTRATION_SUCCESS: \"USER_REGISTRATION_SUCCESS\",\n        USER_REGISTRATION_FAILED: \"USER_REGISTRATION_FAILED\",\n    },\n    ACCOUNTS: {\n        GET_ACCOUNTS_SUCCESS: \"GET_ACCOUNTS_SUCCESS\",\n        GET_ACCOUNT_SUCCESS: \"GET_ACCOUNT_SUCCESS\",\n        GET_ACCOUNT_ERROR: \"GET_ACCOUNT_ERROR\",\n        GET_ACCOUNTS_ERROR: \"GET_ACCOUNTS_ERROR\"\n    }, USERS: {\n        GET_USERS_SUCCESS: \"GET_USERS_SUCCESS\",\n        GET_USERS_ERROR: \"GET_USERS_ERROR\"\n    }\n\n}\nexport default ACTIONS;","import ACTIONS from \"../actions\"\n\nexport interface IState {\n    accounts: Array<any>;\n    userName: string | null,\n    users: Array<any>;\n    account: any\n}\n\nconst initialState: IState = { accounts: [], users: [], userName: null, account: null }\nfunction mainReducer(state = initialState, action: any) {\n    switch (action.type) {\n\n        case ACTIONS.REGISTER.USER_REGISTRATION_SUCCESS: {\n            alert(action.payload)\n            return state;\n        }\n\n        case ACTIONS.REGISTER.USER_REGISTRATION_FAILED: {\n            alert(action.payload)\n            return state;\n        }\n\n        case ACTIONS.REGISTER.USER_REGISTRATION_PENDING: {\n\n            return state;\n        }\n\n        case ACTIONS.ACCOUNTS.GET_ACCOUNTS_SUCCESS: {\n            return { ...state, accounts: [...action.payload] };\n        }\n        case ACTIONS.USERS.GET_USERS_SUCCESS: {\n            return { ...state, users: [...action.payload] };\n        }\n        case ACTIONS.ACCOUNTS.GET_ACCOUNT_SUCCESS: {\n            return { ...state, account: action.payload };\n        }\n\n\n        default: {\n            return state;\n        }\n    }\n}\n\nexport default mainReducer;","\nimport mainReducer from \"./reducers/mainReducers\"\nimport { createStore } from \"redux\"\n\nconst store = createStore(mainReducer)\n\nexport default store;","import { IUserDetails } from \"../../components/containers/pages/register\";\nimport axios from \"axios\"\nexport const BASE_URL = \"http://localhost:5000\"\nconst API_URL = `${BASE_URL}/auth/register`\nexport default async function registerService(userDetails: IUserDetails) {\n    const { data } = await axios.post(`${API_URL}`, userDetails)\n    return data.message\n}","\nimport axios from \"axios\"\nimport { IUserDetails } from \"../../components/containers/pages/register\";\nimport ACTIONS from \"../actions\";\nimport store from \"../index\"\nimport registerService from \"../services/register.service\";\n\nconst { dispatch } = store;\n\n\n\nexport async function registerUser(userDetails: IUserDetails) {\n\n    try {\n        const result = await registerService(userDetails)\n        dispatch({ type: ACTIONS.REGISTER.USER_REGISTRATION_SUCCESS, payload: result })\n    } catch (ex) {\n        console.log(ex)\n        dispatch({ type: ACTIONS.REGISTER.USER_REGISTRATION_FAILED, payload: \"Something went wrong\" })\n        // console.log(\"we had an error\", ex)\n    } finally {\n        // dispatch({ type: ACTIONS.MOVIES.IS_CURRENT_MOVIE_LOADING, isCurrentMovieLoading: false })\n    }\n}\n\n","import React, { useState } from \"react\"\nimport { Form, Col, Button } from \"react-bootstrap\"\nimport { registerUser } from \"../../../../store/async-actions/registerUser\"\n\n\nexport interface IUserDetails {\n    email: string,\n    firstName: string,\n    lastName: string,\n    phone: number | undefined,\n    bankBranch: number | undefined,\n    id: number | undefined,\n    address: string,\n    password: string\n}\n\n\nexport function Register() {\n    const registrationHeader: string = \"Register\"\n    const user: IUserDetails = {\n        email: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        phone: undefined,\n        bankBranch: undefined,\n        id: undefined,\n        address: \"\",\n        password: \"\"\n    }\n    const [userDetails, setUserDetails] = useState(user)\n    const [emailValidation, setEmailValidation] = useState({ message: \"\", isValid: true })\n    function onChangeUserDetails(key: string, value: string) {\n        setUserDetails({ ...userDetails, [key]: value })\n    }\n\n    // if you want something more build in - use form validation in react\n    function emailValidate(value: string) {\n        if (!value) setEmailValidation({ isValid: false, message: \"email is required\" })\n        else if (!value.includes(\"@\")) {\n            console.log(\"no @ in the email format value\")\n            setEmailValidation({ isValid: false, message: \"email format is wrong\" })\n        } else if (value) setEmailValidation({ isValid: true, message: \"\" })\n\n    }\n\n    function sendUserDetails() {\n        registerUser(userDetails)\n        console.log(userDetails)\n    }\n    return <div>\n        <h1> {registrationHeader} </h1>\n        <div>\n            <Form>\n                <Form.Row>\n\n                    <Form.Group as={Col} controlId=\"formGridEmail\">\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control name=\"email\" onChange={(event) => {\n                            emailValidate(event?.target.value)\n                            onChangeUserDetails(event?.target.name, event?.target.value)\n                        }}\n                            type=\"email\" placeholder=\"Enter email\" />\n                        {emailValidation.isValid ? \"\" : emailValidation.message}\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control name=\"password\" type=\"password\" onChange={(event) => onChangeUserDetails(event?.target.name, event?.target.value)} placeholder=\"Password\" />\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridPassword\">\n                        <Form.Label>Id</Form.Label>\n                        <Form.Control name=\"id\" type=\"number\" placeholder=\"id\" onChange={(event) => onChangeUserDetails(event?.target.name, event?.target.value)} />\n                    </Form.Group>\n\n                </Form.Row>\n\n                <Form.Group controlId=\"formGridAddress1\">\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control name=\"address\" placeholder=\"1234 Main St\" onChange={(event) => onChangeUserDetails(event?.target.name, event?.target.value)} />\n                </Form.Group>\n\n                <Form.Group controlId=\"formGridAddress2\">\n                    <Form.Label>Phone</Form.Label>\n                    <Form.Control name=\"phone\" type=\"number\" onChange={(event) => onChangeUserDetails(event?.target.name, event?.target.value)} />\n                </Form.Group>\n\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridCity\">\n                        <Form.Label>First Name</Form.Label>\n                        <Form.Control name=\"firstName\" onChange={(event) => onChangeUserDetails(event?.target.name, event?.target.value)} />\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridState\">\n                        <Form.Label>Last Name</Form.Label>\n                        <Form.Control name=\"lastName\" onChange={(event) => onChangeUserDetails(event?.target.name, event?.target.value)} />\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridZip\">\n                        <Form.Label>Bank Branch</Form.Label>\n                        <Form.Control name=\"bankBranch\" type=\"number\" onChange={(event) => onChangeUserDetails(event?.target.name, event?.target.value)} />\n                    </Form.Group>\n                </Form.Row>\n\n                <Button variant=\"primary\" onClick={sendUserDetails} type=\"button\">\n                    Save\n  </Button>\n            </Form>\n        </div>\n    </div>\n\n}\n","import axios from \"axios\"\nimport { BASE_URL } from \"./register.service\";\nimport { IChangePassword } from \"../../components/containers/pages/changePassword\";\n\nconst API_URL = `${BASE_URL}/auth/changePassword`\nexport default async function changePasswordService(changePasswordDetails: IChangePassword) {\n    const { data } = await axios.post(`${API_URL}`, changePasswordDetails)\n    return data.message\n}","\nimport axios from \"axios\"\nimport { IChangePassword } from \"../../components/containers/pages/changePassword\";\nimport { IUserDetails } from \"../../components/containers/pages/register\";\nimport ACTIONS from \"../actions\";\nimport store from \"../index\"\nimport changePasswordService from \"../services/changePassword.service\";\n\nconst { dispatch } = store;\n\n\n\nexport async function changePasswordAction(changePasswordDetails: IChangePassword) {\n\n    try {\n        const result = await changePasswordService(changePasswordDetails)\n        alert(result)\n    } catch (ex) {\n        console.log(ex)\n        // dispatch({ type: ACTIONS.REGISTER.USER_REGISTRATION_FAILED, payload: \"Something went wrong\" })\n        // console.log(\"we had an error\", ex)\n    } finally {\n        // dispatch({ type: ACTIONS.MOVIES.IS_CURRENT_MOVIE_LOADING, isCurrentMovieLoading: false })\n    }\n}\n\n","import React, { useState } from \"react\"\nimport { Form, Col, Button } from \"react-bootstrap\"\nimport { changePasswordAction } from \"../../../../store/async-actions/changePassword\"\n\n\nexport interface IChangePassword {\n    email: string,\n    password: string,\n    newPassword: string\n    confirmNewPassword: string,\n}\n\n\nexport function ChangePassword() {\n    const cpd: IChangePassword = {\n        email: \"\",\n        password: \"\",\n        newPassword: \"\",\n        confirmNewPassword: \"\",\n\n    }\n    const [changePasswordDetails, setChangePasswordDetails] = useState(cpd)\n    function onChangePassword(key: string, value: string) {\n        setChangePasswordDetails({ ...changePasswordDetails, [key]: value })\n    }\n\n    // if you want something more build in - use form validation in react\n\n\n    function sendChangePasswordReuquest() {\n        changePasswordAction(changePasswordDetails)\n    }\n    return <div>\n        <h1> Change Password </h1>\n        <div style={{ width: \"600px\" }}>\n            <Form >\n                <Form.Row>\n\n                    <Form.Group as={Col} controlId=\"formGridEmail\">\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control name=\"email\" onChange={(event) => {\n                            onChangePassword(event?.target.name, event?.target.value)\n                        }}\n                            type=\"email\" placeholder=\"Enter email\" />\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control name=\"password\" type=\"password\" onChange={(event) => onChangePassword(event?.target.name, event?.target.value)} placeholder=\"Password\" />\n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridCity\">\n                        <Form.Label>New Password</Form.Label>\n                        <Form.Control name=\"newPassword\" onChange={(event) => onChangePassword(event?.target.name, event?.target.value)} />\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridState\">\n                        <Form.Label>Confirm New Password</Form.Label>\n                        <Form.Control name=\"confirmNewPassword\" onChange={(event) => onChangePassword(event?.target.name, event?.target.value)} />\n                    </Form.Group>\n                </Form.Row>\n\n                <Button variant=\"primary\" onClick={sendChangePasswordReuquest} type=\"button\">\n                    Save\n  </Button>\n            </Form>\n        </div>\n    </div>\n\n}\n","import axios from \"axios\"\nimport { BASE_URL } from \"./register.service\"\n\n\nconst API_URL = `${BASE_URL}/account`\nexport default async function getAccountsService(userId?: number) {\n    const queryUserId = userId ? `?userId=${userId}` : \"\"\n    const { data } = await axios.get(`${API_URL}${queryUserId}`,\n        { headers: { authorization: localStorage.getItem(\"token\") } })\n    const modeldedAccounts = createAccounts(data)\n    return modeldedAccounts\n}\n\nfunction createAccounts(data: Array<any>) {\n    if (!Array.isArray(data)) return;\n    const accountObjReduce = data.reduce((accountsObj, currentAccountUser) => {\n        const { accountId, firstName, email, createdAt } = currentAccountUser;\n        const newAccount = !accountsObj[accountId] ? { accountId, createdAt, users: [{ firstName, email }] } : {\n            ...accountsObj[accountId],\n            users: [...accountsObj[accountId].users, { firstName, email }]\n        }\n        return {\n            ...accountsObj, [accountId]: newAccount\n        }\n    }, {})\n    return Object.values(accountObjReduce)\n}\n\n\n\n\nexport async function getAccountByIdService(accountId: number) {\n    const { data } = await axios.get(`${API_URL}/${accountId}`)\n    return data\n}\n\nexport async function accountOperation(operation: string, amount: number) {\n\n    // const { data } = await axios.put(`${API_URL}`, { accountId, operation, amount })\n    // return data\n}\n\n\n\n\n//reduce 2\n // if (accountsObj[accountId]) {\n        //     return {\n        //         ...accountsObj, [accountId]: {\n        //             ...accountsObj[accountId],\n        //             users: [...accountsObj[accountId].users, { firstName, email }]\n        //         }\n        //     }\n        // } else {\n        //     return { ...accountsObj, [accountId]: { accountId, createdAt, users: [{ firstName, email }] } }\n        // }\n\n\n\n\n//reduce implementation\n// console.log(data)\n// let accountObject: any = {};\n// for (let index = 0; index < data.length; index++) {\n//     const accountUser = data[index];\n//     const currentAccount = accountObject[accountUser.accountId];\n//     if (currentAccount) {\n//         currentAccount.users.push({ firstName: accountUser.firstName, email: accountUser.email })\n//     } else {\n//         const { accountId, createdAt, firstName, email } = accountUser;\n//         accountObject[accountUser.accountId] = { accountId, createdAt, users: [{ firstName, email }] }\n//     }\n\n// }\n// console.log(accountObject)\n// i have:\n\n// Object\n// accountId: 123\n// createdAt: \"2021-02-07T16:02:28.000Z\"\n// email: \"sapiro@gmail.com\"\n// firstName: \"sapiro\"\n// __proto__: Object\n// accounts.service.ts:16 \n// Object\n// accountId: 123\n// createdAt: \"2021-02-07T16:02:28.000Z\"\n// email: \"refaat1123@gmail.com\"\n// firstName: \"refaat\"\n// __proto__: Object\n\n// i need\n\n// Object\n// accountId: 123\n// createdAt: \"2021-02-07T16:02:28.000Z\"\n// users: [ { firstName: \"refaat\" ,email: \"sapiro@gmail.com\" },  { firstName: \"refaat\" ,email: \"refaat1123@gmail.com\" } ] \n// __proto__: Object\n\n\n// \"{\"123\":{\"accountId\":123,\"createdat\":\"111\",\"users\":[{\"name\":\"sapir\"},{\"name\":\"rafa\"}]},\"11111\":{\"accountId\":123,\"createdat\":\"111\",\"users\":[{\"name\":\"sapir\"}]}}\"\n","\nimport ACTIONS from \"../actions\";\nimport store from \"../index\"\n\nimport getAccountsService, { getAccountByIdService } from \"../services/accounts.service\";\n\nconst { dispatch } = store\n\nexport default async function getAccountsAction(userId?: number) {\n    try {\n        const result = await getAccountsService(userId)\n        dispatch({ type: ACTIONS.ACCOUNTS.GET_ACCOUNTS_SUCCESS, payload: result })\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport async function getAccountById(accountId: number) {\n    try {\n        const result = await getAccountByIdService(accountId)\n        dispatch({ type: ACTIONS.ACCOUNTS.GET_ACCOUNT_SUCCESS, payload: result })\n    } catch (error) {\n        console.log(error)\n    }\n\n}","import axios from \"axios\"\nimport { BASE_URL } from \"./register.service\"\n\n\nconst API_URL = `${BASE_URL}/user`\nexport default async function getUsersService() {\n    const { data } = await axios.get(`${API_URL}`)\n    return data.users\n}\n\n\n\n\n","\nimport ACTIONS from \"../actions\";\nimport store from \"../index\"\n\nimport getUsersService from \"../services/users.service\";\n\nconst { dispatch } = store\n\nexport default async function getUsersAction() {\n\n    try {\n        const result = await getUsersService()\n        dispatch({ type: ACTIONS.USERS.GET_USERS_SUCCESS, payload: result })\n    } catch (error) {\n        console.log(error)\n    }\n\n}\n","import React from \"react\"\n\nimport css from \"./style.module.css\"\nimport { PersonSquare, EnvelopeFill } from \"react-bootstrap-icons\"\n\ninterface IUser {\n    firstName: string\n    email: string\n}\n\n\nexport default function UserCard(props: IUser) {\n    return <div className={css.userCard}>\n        <h3><PersonSquare /> {props.firstName}  </h3>\n        <h3><EnvelopeFill /> {props.email}</h3>\n    </div>\n}","import React from \"react\"\nimport moment from \"moment\"\nimport UserCard from \"../user\"\nimport { Link } from \"react-router-dom\"\ninterface IAccount {\n    accountId: string\n    createdAt: string\n    users: Array<any>\n}\n\n\nexport default function AccountCard(props: IAccount) {\n    return <div>\n        <h1>  Account Id:   <Link to={`account-page/${props.accountId}`}> {props.accountId} </Link>  </h1>\n        <h4> Created At: {moment(props.createdAt).format(\"DD-MMM yyyy\")}  </h4>\n        <div>\n            {props.users.map(user => <UserCard key={user.email} {...user} />)}\n        </div>\n    </div >\n}","import React, { useEffect } from \"react\"\nimport { useSelector } from \"react-redux\"\n\nimport getAccountsAction from \"../../../../store/async-actions/getAccounts\"\nimport getUsersAction from \"../../../../store/async-actions/getUsers\"\n\nimport AccountCard from \"../../../ui-component/account\"\nimport { Form } from \"react-bootstrap\"\nimport { IState } from \"../../../../store/reducers/mainReducers\"\n\n\n\n\nexport default function AccountsPage() {\n\n    const accounts = useSelector((store: IState) => store.accounts)\n    const users = useSelector((store: IState) => store.users)\n\n\n    useEffect(() => {\n        getAccountsAction()\n        getUsersAction()\n    }, [])\n\n    return <div>\n        <h1> Accounts  </h1>\n        <div>\n            Filters: <UsersFilter users={users} onChange={(v: number) => {\n                getAccountsAction(v)\n            }} />\n        </div>\n        <div>\n            {accounts.map(account => <AccountCard key={account.accountId} {...account} />)}\n        </div>\n    </div>\n}\n\nfunction UsersFilter(props: any) {\n    const { users = [] } = props;\n    return <Form>\n        <Form.Group controlId=\"exampleForm.SelectCustom\">\n            <Form.Label>Custom select</Form.Label>\n            <Form.Control onChange={(e) => { props.onChange(e.target.value) }} as=\"select\" custom>\n                {_getUsers()}\n            </Form.Control>\n        </Form.Group>\n    </Form>\n    function _getUsers() {\n        return users.map((item: any) => <option value={\"123;delete * from users\"} key={item.email}> {item.email} </option>)\n    }\n}\n\n","import React from \"react\"\nimport { Nav } from \"react-bootstrap\"\n\nimport { Link } from \"react-router-dom\"\nimport css from \"./style.module.css\"\n\nexport const routes = [\n    { to: \"/\", title: \"Accounts\" },\n    { to: \"/CreateAccount\", title: \"Create Account\" },\n    { to: \"/change-password\", title: \"Change Password\" },\n    { to: \"/login\", title: \"Login\" },\n\n]\n\nexport default function NavBarApp() {\n    return (<Nav\n        variant=\"pills\" className={css.mainNavBar}>\n        <NavItmesList links={routes} />\n    </Nav>)\n}\n\nfunction NavItmesList(props: any): any {\n\n    const { links } = props\n    if (!Array.isArray(links)) return null\n    return links.map(link => {\n        return <Nav.Item>  <Link className={css.customLink} to={link.to} >{link.title}</Link> </Nav.Item>\n    })\n}","import React, { useEffect, useState } from \"react\"\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\"\nimport { getAccountById } from \"../../../../store/async-actions/getAccounts\";\nimport { IState } from \"../../../../store/reducers/mainReducers\";\nimport { Button, Form, Badge } from \"react-bootstrap\"\nimport moment from \"moment\"\n\n\n\nexport default function AccountPage() {\n    const params: { accountId: string } = useParams();\n    const currentAccount = useSelector((state: IState) => state.account)\n    useEffect(() => {\n        getAccountById(Number(params.accountId))\n    }, [])\n    return <div>\n        Account page : {params.accountId}\n        <AccountDetails currentAccount={currentAccount} />\n        <AccountActions operation={() => { }} />\n    </div>\n}\n\nconst fields = [\n    { key: \"createdAt\", title: \"Created At\", fn: \"extractCreatedAt\" },\n    { key: \"id\", title: \"Account\" },\n    { key: \"balance\", title: \"Balance\", fn: \"extractBalance\" },\n    { key: \"updatedAt\", title: \"Updated Date\" }\n]\n\nconst helpers: any = {\n    extractCreatedAt: (account: any) => {\n        if (!account) return;\n        console.log(account)\n        return moment(account.createdAt).format(\"DD/MMM/YY\")\n    },\n    extractBalance: (account: any) => {\n        if (!account) return;\n        return account.balance + \" $\"\n    }\n}\n\nfunction AccountDetails(props: any): any {\n    const { currentAccount } = props;\n    if (!currentAccount) return null\n    return fields.map(header => {\n        return <h1> {header.title} : {header.fn ? helpers[header.fn](currentAccount) : currentAccount[header.key]} </h1>\n    })\n}\n\nfunction AccountActions(props: any): any {\n    const [amount, setAmount] = useState(0)\n    return <div>\n        <Form>\n            <h1><Badge variant=\"secondary\">{amount}</Badge> </h1>\n            <Form.Group controlId=\"formBasicRange\">\n                <Form.Label>Range</Form.Label>\n                <Form.Control value={amount} min={0} max={1000} onChange={(e: any) => {\n                    setAmount(e.target.value)\n                }} type=\"range\" />\n            </Form.Group>\n            <Button onClick={() => { props.operation(\"Deposit\", amount) }} > Deposit </Button>\n            <Button onClick={() => { props.operation(\"Withdraw\", amount) }} > Withdraw </Button>\n        </Form>\n    </div>\n}","import React, { useState } from \"react\"\nimport { Form, Col, Button } from \"react-bootstrap\"\nimport { changePasswordAction } from \"../../../../store/async-actions/changePassword\"\nimport axios from \"axios\"\n\n\n\n\nexport function Login() {\n    const cpd: any = {\n        email: \"\",\n        password: \"\",\n\n    }\n    const [loginDetails, setChangePasswordDetails] = useState(cpd)\n    function onChangePassword(key: string, value: string) {\n        setChangePasswordDetails({ ...loginDetails, [key]: value })\n    }\n\n    // if you want something more build in - use form validation in react\n\n\n    async function sendLoginReuqest() {\n        const result: any = await axios.post(\"http://localhost:5000/auth/login\", loginDetails)\n        localStorage.setItem(\"token\", result.data.token)\n        console.log(result)\n    }\n    return <div>\n        <h1> Login </h1>\n        <div style={{ width: \"600px\" }}>\n            <Form >\n                <Form.Row>\n\n                    <Form.Group as={Col} controlId=\"formGridEmail\">\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control name=\"email\" onChange={(event) => {\n                            onChangePassword(event?.target.name, event?.target.value)\n                        }}\n                            type=\"email\" placeholder=\"Enter email\" />\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control name=\"password\" type=\"password\" onChange={(event) => onChangePassword(event?.target.name, event?.target.value)} placeholder=\"Password\" />\n                    </Form.Group>\n                </Form.Row>\n\n\n                <Button variant=\"primary\" onClick={sendLoginReuqest} type=\"button\">\n                    Save\n  </Button>\n            </Form>\n        </div>\n    </div>\n\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Register } from './components/containers/pages/register';\nimport { ChangePassword } from './components/containers/pages/changePassword';\nimport AccountsPage from './components/containers/pages/accounts-page';\nimport { BrowserRouter as Router, Switch, Route, HashRouter } from 'react-router-dom';\nimport NavBarApp from './components/ui-component/nav-bar';\nimport AccountPage from './components/containers/pages/account-page';\nimport { Login } from './components/containers/pages/login';\n\n\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Router>\n        <div className=\"container\">\n          <h1 className=\"jumbotron\"> Bank Of Haifa  </h1>\n          <div className=\"row\">\n            <NavBarApp />\n          </div>\n          <div className=\"row\">\n            <Switch>\n              <Route key=\"CreateAccount\" path=\"/CreateAccount\">\n                <Register />\n              </Route>\n              <Route key=\"accountPage\" path=\"/account-page/:accountId\">\n                <AccountPage />\n              </Route>\n              <Route key=\"change-password\" path=\"/change-password\">\n                <ChangePassword />\n              </Route>\n              <Route key=\"login\" path=\"/login\">\n                <Login />\n              </Route>\n              <Route key=\"home\" path=\"/\">\n                <AccountsPage />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\"\nimport store from \"./store\"\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}